/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_list.hpp"

namespace SQConvert {
	/* Allow enums to be used as Squirrel parameters */
	template <> inline ScriptList::SorterType GetParam<ScriptList::SorterType> (HSQUIRRELVM vm, int index) { return (ScriptList::SorterType) GetInteger (vm, index); }
	template <> inline void Push<ScriptList::SorterType> (HSQUIRRELVM vm, ScriptList::SorterType res) { sq_pushinteger (vm, (int32)res); }

	/* Allow ScriptList to be used as Squirrel parameter */
	template <> inline       ScriptList *GetParam<ScriptList*> (HSQUIRRELVM vm, int index) { return  GetUserPointer<ScriptList> (vm, index); }
	template <> inline       ScriptList &GetParam<ScriptList&> (HSQUIRRELVM vm, int index) { return *GetUserPointer<ScriptList> (vm, index); }
	template <> inline const ScriptList *GetParam<const ScriptList*> (HSQUIRRELVM vm, int index) { return  GetUserPointer<ScriptList> (vm, index); }
	template <> inline const ScriptList &GetParam<const ScriptList&> (HSQUIRRELVM vm, int index) { return *GetUserPointer<ScriptList> (vm, index); }
	template <> inline void Push<ScriptList *> (HSQUIRRELVM vm, ScriptList *res) { PushObj<ScriptList> (vm, res, "List", true); }
} // namespace SQConvert
