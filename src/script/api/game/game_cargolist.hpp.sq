/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_cargolist.hpp"


template <> const char *GetClassName<ScriptCargoList, ST_GS>() { return "GSCargoList"; }

static void SQGSCargoList_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptCargoList, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptCargoList, void (ScriptCargoList::*)(), 1> (engine, "x");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptCargoList_IndustryAccepting, ST_GS>() { return "GSCargoList_IndustryAccepting"; }

static void SQGSCargoList_IndustryAccepting_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptCargoList_IndustryAccepting, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptCargoList_IndustryAccepting, void (ScriptCargoList_IndustryAccepting::*)(IndustryID industry_id), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptCargoList_IndustryProducing, ST_GS>() { return "GSCargoList_IndustryProducing"; }

static void SQGSCargoList_IndustryProducing_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptCargoList_IndustryProducing, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptCargoList_IndustryProducing, void (ScriptCargoList_IndustryProducing::*)(IndustryID industry_id), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptCargoList_StationAccepting, ST_GS>() { return "GSCargoList_StationAccepting"; }

static void SQGSCargoList_StationAccepting_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptCargoList_StationAccepting, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptCargoList_StationAccepting, void (ScriptCargoList_StationAccepting::*)(StationID station_id), 2> (engine, "xi");

	engine->AddClassEnd();
}
