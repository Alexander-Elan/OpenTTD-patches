/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_marine.hpp"


static void SQAIMarine_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIMarine");
	SQConvert::AddConstructor <ScriptMarine, void (ScriptMarine::*)(), 1> (engine, "x");

	engine->AddConst ("ERR_MARINE_BASE",                   ScriptMarine::ERR_MARINE_BASE);
	engine->AddConst ("ERR_MARINE_MUST_BE_BUILT_ON_WATER", ScriptMarine::ERR_MARINE_MUST_BE_BUILT_ON_WATER);
	engine->AddConst ("BT_DOCK",                           ScriptMarine::BT_DOCK);
	engine->AddConst ("BT_DEPOT",                          ScriptMarine::BT_DEPOT);
	engine->AddConst ("BT_BUOY",                           ScriptMarine::BT_BUOY);

	ScriptError::RegisterErrorMap(STR_ERROR_MUST_BE_BUILT_ON_WATER, ScriptMarine::ERR_MARINE_MUST_BE_BUILT_ON_WATER);

	ScriptError::RegisterErrorMapString(ScriptMarine::ERR_MARINE_MUST_BE_BUILT_ON_WATER, "ERR_MARINE_MUST_BE_BUILT_ON_WATER");

	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::IsWaterDepotTile,       "IsWaterDepotTile",       2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::IsDockTile,             "IsDockTile",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::IsBuoyTile,             "IsBuoyTile",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::IsLockTile,             "IsLockTile",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::IsCanalTile,            "IsCanalTile",            2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::AreWaterTilesConnected, "AreWaterTilesConnected", 3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::BuildWaterDepot,        "BuildWaterDepot",        3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::BuildDock,              "BuildDock",              3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::BuildBuoy,              "BuildBuoy",              2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::BuildLock,              "BuildLock",              2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::BuildCanal,             "BuildCanal",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::RemoveWaterDepot,       "RemoveWaterDepot",       2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::RemoveDock,             "RemoveDock",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::RemoveBuoy,             "RemoveBuoy",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::RemoveLock,             "RemoveLock",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::RemoveCanal,            "RemoveCanal",            2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptMarine::GetBuildCost,           "GetBuildCost",           2, ".i");

	engine->AddClassEnd();
}
