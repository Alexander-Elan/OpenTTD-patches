/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_stationlist.hpp"


static void SQAIStationList_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList", "AIList");
	SQConvert::AddConstructor <void (ScriptStationList::*)(ScriptStation::StationType station_type), 2> (engine, "xi");

	engine->AddClassEnd();
}


static void SQAIStationList_Cargo_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_Cargo", "AIList");
	SQConvert::AddConstructor <void (ScriptStationList_Cargo::*)(ScriptStationList_Cargo::CargoMode mode, ScriptStationList_Cargo::CargoSelector selector, StationID station_id, CargoID cargo, StationID other_station), 6> (engine, "xiiiii");

	engine->AddConst ("CS_BY_FROM",     ScriptStationList_Cargo::CS_BY_FROM);
	engine->AddConst ("CS_VIA_BY_FROM", ScriptStationList_Cargo::CS_VIA_BY_FROM);
	engine->AddConst ("CS_BY_VIA",      ScriptStationList_Cargo::CS_BY_VIA);
	engine->AddConst ("CS_FROM_BY_VIA", ScriptStationList_Cargo::CS_FROM_BY_VIA);
	engine->AddConst ("CM_WAITING",     ScriptStationList_Cargo::CM_WAITING);
	engine->AddConst ("CM_PLANNED",     ScriptStationList_Cargo::CM_PLANNED);

	engine->AddClassEnd();
}


static void SQAIStationList_CargoWaiting_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoWaiting", "AIStationList_Cargo");
	SQConvert::AddConstructor <void (ScriptStationList_CargoWaiting::*)(ScriptStationList_Cargo::CargoSelector selector, StationID station_id, CargoID cargo, StationID other_station), 5> (engine, "xiiii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoPlanned_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoPlanned", "AIStationList_Cargo");
	SQConvert::AddConstructor <void (ScriptStationList_CargoPlanned::*)(ScriptStationList_Cargo::CargoSelector selector, StationID station_id, CargoID cargo, StationID other_station), 5> (engine, "xiiii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoWaitingByFrom_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoWaitingByFrom", "AIStationList_CargoWaiting");
	SQConvert::AddConstructor <void (ScriptStationList_CargoWaitingByFrom::*)(StationID station_id, CargoID cargo), 3> (engine, "xii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoWaitingViaByFrom_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoWaitingViaByFrom", "AIStationList_CargoWaiting");
	SQConvert::AddConstructor <void (ScriptStationList_CargoWaitingViaByFrom::*)(StationID station_id, CargoID cargo, StationID via), 4> (engine, "xiii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoWaitingByVia_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoWaitingByVia", "AIStationList_CargoWaiting");
	SQConvert::AddConstructor <void (ScriptStationList_CargoWaitingByVia::*)(StationID station_id, CargoID cargo), 3> (engine, "xii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoWaitingFromByVia_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoWaitingFromByVia", "AIStationList_CargoWaiting");
	SQConvert::AddConstructor <void (ScriptStationList_CargoWaitingFromByVia::*)(StationID station_id, CargoID cargo, StationID from), 4> (engine, "xiii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoPlannedByFrom_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoPlannedByFrom", "AIStationList_CargoPlanned");
	SQConvert::AddConstructor <void (ScriptStationList_CargoPlannedByFrom::*)(StationID station_id, CargoID cargo), 3> (engine, "xii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoPlannedViaByFrom_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoPlannedViaByFrom", "AIStationList_CargoPlanned");
	SQConvert::AddConstructor <void (ScriptStationList_CargoPlannedViaByFrom::*)(StationID station_id, CargoID cargo, StationID via), 4> (engine, "xiii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoPlannedByVia_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoPlannedByVia", "AIStationList_CargoPlanned");
	SQConvert::AddConstructor <void (ScriptStationList_CargoPlannedByVia::*)(StationID station_id, CargoID cargo), 3> (engine, "xii");

	engine->AddClassEnd();
}


static void SQAIStationList_CargoPlannedFromByVia_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_CargoPlannedFromByVia", "AIStationList_CargoPlanned");
	SQConvert::AddConstructor <void (ScriptStationList_CargoPlannedFromByVia::*)(StationID station_id, CargoID cargo, StationID from), 4> (engine, "xiii");

	engine->AddClassEnd();
}


static void SQAIStationList_Vehicle_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIStationList_Vehicle", "AIList");
	SQConvert::AddConstructor <void (ScriptStationList_Vehicle::*)(VehicleID vehicle_id), 2> (engine, "xi");

	engine->AddClassEnd();
}
