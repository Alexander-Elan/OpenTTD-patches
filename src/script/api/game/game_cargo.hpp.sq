/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_cargo.hpp"


static void SQGSCargo_Register (Squirrel *engine)
{
	engine->AddClassBegin ("GSCargo");
	SQConvert::AddConstructor <ScriptCargo, void (ScriptCargo::*)(), 1> (engine, "x");

	engine->AddConst ("CC_PASSENGERS",             ScriptCargo::CC_PASSENGERS);
	engine->AddConst ("CC_MAIL",                   ScriptCargo::CC_MAIL);
	engine->AddConst ("CC_EXPRESS",                ScriptCargo::CC_EXPRESS);
	engine->AddConst ("CC_ARMOURED",               ScriptCargo::CC_ARMOURED);
	engine->AddConst ("CC_BULK",                   ScriptCargo::CC_BULK);
	engine->AddConst ("CC_PIECE_GOODS",            ScriptCargo::CC_PIECE_GOODS);
	engine->AddConst ("CC_LIQUID",                 ScriptCargo::CC_LIQUID);
	engine->AddConst ("CC_REFRIGERATED",           ScriptCargo::CC_REFRIGERATED);
	engine->AddConst ("CC_HAZARDOUS",              ScriptCargo::CC_HAZARDOUS);
	engine->AddConst ("CC_COVERED",                ScriptCargo::CC_COVERED);
	engine->AddConst ("TE_NONE",                   ScriptCargo::TE_NONE);
	engine->AddConst ("TE_PASSENGERS",             ScriptCargo::TE_PASSENGERS);
	engine->AddConst ("TE_MAIL",                   ScriptCargo::TE_MAIL);
	engine->AddConst ("TE_GOODS",                  ScriptCargo::TE_GOODS);
	engine->AddConst ("TE_WATER",                  ScriptCargo::TE_WATER);
	engine->AddConst ("TE_FOOD",                   ScriptCargo::TE_FOOD);
	engine->AddConst ("CT_AUTO_REFIT",             ScriptCargo::CT_AUTO_REFIT);
	engine->AddConst ("CT_NO_REFIT",               ScriptCargo::CT_NO_REFIT);
	engine->AddConst ("DT_MANUAL",                 ScriptCargo::DT_MANUAL);
	engine->AddConst ("DT_ASYMMETRIC",             ScriptCargo::DT_ASYMMETRIC);
	engine->AddConst ("DT_SYMMETRIC",              ScriptCargo::DT_SYMMETRIC);
	engine->AddConst ("INVALID_DISTRIBUTION_TYPE", ScriptCargo::INVALID_DISTRIBUTION_TYPE);

	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::IsValidCargo,        "IsValidCargo",        2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::IsValidTownEffect,   "IsValidTownEffect",   2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::GetCargoLabel,       "GetCargoLabel",       2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::IsFreight,           "IsFreight",           2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::HasCargoClass,       "HasCargoClass",       3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::GetTownEffect,       "GetTownEffect",       2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::GetCargoIncome,      "GetCargoIncome",      4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptCargo::GetDistributionType, "GetDistributionType", 2, ".i");

	engine->AddClassEnd();
}
