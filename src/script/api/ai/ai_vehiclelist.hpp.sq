/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_vehiclelist.hpp"


template <> const char *GetClassName<ScriptVehicleList, ST_AI>() { return "AIVehicleList"; }

static void SQAIVehicleList_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList, ST_AI> (), "AIList");
	SQConvert::AddConstructor <ScriptVehicleList, void (ScriptVehicleList::*)(), 1> (engine, "x");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_Station, ST_AI>() { return "AIVehicleList_Station"; }

static void SQAIVehicleList_Station_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_Station, ST_AI> (), "AIList");
	SQConvert::AddConstructor <ScriptVehicleList_Station, void (ScriptVehicleList_Station::*)(StationID station_id), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_Depot, ST_AI>() { return "AIVehicleList_Depot"; }

static void SQAIVehicleList_Depot_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_Depot, ST_AI> (), "AIList");
	SQConvert::AddConstructor <ScriptVehicleList_Depot, void (ScriptVehicleList_Depot::*)(TileIndex tile), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_SharedOrders, ST_AI>() { return "AIVehicleList_SharedOrders"; }

static void SQAIVehicleList_SharedOrders_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_SharedOrders, ST_AI> (), "AIList");
	SQConvert::AddConstructor <ScriptVehicleList_SharedOrders, void (ScriptVehicleList_SharedOrders::*)(VehicleID vehicle_id), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_Group, ST_AI>() { return "AIVehicleList_Group"; }

static void SQAIVehicleList_Group_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_Group, ST_AI> (), "AIList");
	SQConvert::AddConstructor <ScriptVehicleList_Group, void (ScriptVehicleList_Group::*)(GroupID group_id), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_DefaultGroup, ST_AI>() { return "AIVehicleList_DefaultGroup"; }

static void SQAIVehicleList_DefaultGroup_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_DefaultGroup, ST_AI> (), "AIList");
	SQConvert::AddConstructor <ScriptVehicleList_DefaultGroup, void (ScriptVehicleList_DefaultGroup::*)(ScriptVehicle::VehicleType vehicle_type), 2> (engine, "xi");

	engine->AddClassEnd();
}
