/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_waypoint.hpp"


static void SQAIWaypoint_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIWaypoint", "AIBaseStation");
	SQConvert::AddConstructor <ScriptWaypoint, void (ScriptWaypoint::*)(), 1> (engine, "x");

	engine->AddConst ("ERR_WAYPOINT_BASE",                          ScriptWaypoint::ERR_WAYPOINT_BASE);
	engine->AddConst ("ERR_WAYPOINT_TOO_CLOSE_TO_ANOTHER_WAYPOINT", ScriptWaypoint::ERR_WAYPOINT_TOO_CLOSE_TO_ANOTHER_WAYPOINT);
	engine->AddConst ("ERR_WAYPOINT_ADJOINS_MULTIPLE_WAYPOINTS",    ScriptWaypoint::ERR_WAYPOINT_ADJOINS_MULTIPLE_WAYPOINTS);
	engine->AddConst ("WAYPOINT_RAIL",                              ScriptWaypoint::WAYPOINT_RAIL);
	engine->AddConst ("WAYPOINT_BUOY",                              ScriptWaypoint::WAYPOINT_BUOY);
	engine->AddConst ("WAYPOINT_ANY",                               ScriptWaypoint::WAYPOINT_ANY);

	ScriptError::RegisterErrorMap(STR_ERROR_TOO_CLOSE_TO_ANOTHER_WAYPOINT,           ScriptWaypoint::ERR_WAYPOINT_TOO_CLOSE_TO_ANOTHER_WAYPOINT);
	ScriptError::RegisterErrorMap(STR_ERROR_WAYPOINT_ADJOINS_MORE_THAN_ONE_EXISTING, ScriptWaypoint::ERR_WAYPOINT_ADJOINS_MULTIPLE_WAYPOINTS);

	ScriptError::RegisterErrorMapString(ScriptWaypoint::ERR_WAYPOINT_TOO_CLOSE_TO_ANOTHER_WAYPOINT, "ERR_WAYPOINT_TOO_CLOSE_TO_ANOTHER_WAYPOINT");
	ScriptError::RegisterErrorMapString(ScriptWaypoint::ERR_WAYPOINT_ADJOINS_MULTIPLE_WAYPOINTS,    "ERR_WAYPOINT_ADJOINS_MULTIPLE_WAYPOINTS");

	SQConvert::DefSQStaticMethod (engine, &ScriptWaypoint::IsValidWaypoint, "IsValidWaypoint", 2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptWaypoint::GetWaypointID,   "GetWaypointID",   2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptWaypoint::HasWaypointType, "HasWaypointType", 3, ".ii");

	engine->AddClassEnd();
}
