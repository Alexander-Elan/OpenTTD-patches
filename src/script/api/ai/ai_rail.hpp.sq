/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_rail.hpp"


static void SQAIRail_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AIRail");
	SQConvert::AddConstructor <void (ScriptRail::*)(), 1> (engine, "x");

	engine->AddConst ("ERR_RAIL_BASE",                   ScriptRail::ERR_RAIL_BASE);
	engine->AddConst ("ERR_CROSSING_ON_ONEWAY_ROAD",     ScriptRail::ERR_CROSSING_ON_ONEWAY_ROAD);
	engine->AddConst ("ERR_UNSUITABLE_TRACK",            ScriptRail::ERR_UNSUITABLE_TRACK);
	engine->AddConst ("ERR_RAILTYPE_DISALLOWS_CROSSING", ScriptRail::ERR_RAILTYPE_DISALLOWS_CROSSING);
	engine->AddConst ("RAILTYPE_INVALID",                ScriptRail::RAILTYPE_INVALID);
	engine->AddConst ("RAILTRACK_NE_SW",                 ScriptRail::RAILTRACK_NE_SW);
	engine->AddConst ("RAILTRACK_NW_SE",                 ScriptRail::RAILTRACK_NW_SE);
	engine->AddConst ("RAILTRACK_NW_NE",                 ScriptRail::RAILTRACK_NW_NE);
	engine->AddConst ("RAILTRACK_SW_SE",                 ScriptRail::RAILTRACK_SW_SE);
	engine->AddConst ("RAILTRACK_NW_SW",                 ScriptRail::RAILTRACK_NW_SW);
	engine->AddConst ("RAILTRACK_NE_SE",                 ScriptRail::RAILTRACK_NE_SE);
	engine->AddConst ("RAILTRACK_INVALID",               ScriptRail::RAILTRACK_INVALID);
	engine->AddConst ("SIGNALTYPE_NORMAL",               ScriptRail::SIGNALTYPE_NORMAL);
	engine->AddConst ("SIGNALTYPE_ENTRY",                ScriptRail::SIGNALTYPE_ENTRY);
	engine->AddConst ("SIGNALTYPE_EXIT",                 ScriptRail::SIGNALTYPE_EXIT);
	engine->AddConst ("SIGNALTYPE_COMBO",                ScriptRail::SIGNALTYPE_COMBO);
	engine->AddConst ("SIGNALTYPE_PBS",                  ScriptRail::SIGNALTYPE_PBS);
	engine->AddConst ("SIGNALTYPE_PBS_ONEWAY",           ScriptRail::SIGNALTYPE_PBS_ONEWAY);
	engine->AddConst ("SIGNALTYPE_TWOWAY",               ScriptRail::SIGNALTYPE_TWOWAY);
	engine->AddConst ("SIGNALTYPE_NORMAL_TWOWAY",        ScriptRail::SIGNALTYPE_NORMAL_TWOWAY);
	engine->AddConst ("SIGNALTYPE_ENTRY_TWOWAY",         ScriptRail::SIGNALTYPE_ENTRY_TWOWAY);
	engine->AddConst ("SIGNALTYPE_EXIT_TWOWAY",          ScriptRail::SIGNALTYPE_EXIT_TWOWAY);
	engine->AddConst ("SIGNALTYPE_COMBO_TWOWAY",         ScriptRail::SIGNALTYPE_COMBO_TWOWAY);
	engine->AddConst ("SIGNALTYPE_NONE",                 ScriptRail::SIGNALTYPE_NONE);
	engine->AddConst ("BT_TRACK",                        ScriptRail::BT_TRACK);
	engine->AddConst ("BT_SIGNAL",                       ScriptRail::BT_SIGNAL);
	engine->AddConst ("BT_DEPOT",                        ScriptRail::BT_DEPOT);
	engine->AddConst ("BT_STATION",                      ScriptRail::BT_STATION);
	engine->AddConst ("BT_WAYPOINT",                     ScriptRail::BT_WAYPOINT);

	ScriptError::RegisterErrorMap(STR_ERROR_CROSSING_ON_ONEWAY_ROAD,    ScriptRail::ERR_CROSSING_ON_ONEWAY_ROAD);
	ScriptError::RegisterErrorMap(STR_ERROR_NO_SUITABLE_RAILROAD_TRACK, ScriptRail::ERR_UNSUITABLE_TRACK);
	ScriptError::RegisterErrorMap(STR_ERROR_THERE_IS_NO_RAILROAD_TRACK, ScriptRail::ERR_UNSUITABLE_TRACK);
	ScriptError::RegisterErrorMap(STR_ERROR_THERE_ARE_NO_SIGNALS,       ScriptRail::ERR_UNSUITABLE_TRACK);
	ScriptError::RegisterErrorMap(STR_ERROR_THERE_IS_NO_STATION,        ScriptRail::ERR_UNSUITABLE_TRACK);
	ScriptError::RegisterErrorMap(STR_ERROR_CROSSING_DISALLOWED,        ScriptRail::ERR_RAILTYPE_DISALLOWS_CROSSING);

	ScriptError::RegisterErrorMapString(ScriptRail::ERR_CROSSING_ON_ONEWAY_ROAD,     "ERR_CROSSING_ON_ONEWAY_ROAD");
	ScriptError::RegisterErrorMapString(ScriptRail::ERR_UNSUITABLE_TRACK,            "ERR_UNSUITABLE_TRACK");
	ScriptError::RegisterErrorMapString(ScriptRail::ERR_RAILTYPE_DISALLOWS_CROSSING, "ERR_RAILTYPE_DISALLOWS_CROSSING");

	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetName,                         "GetName",                         2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::IsRailTile,                      "IsRailTile",                      2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::IsLevelCrossingTile,             "IsLevelCrossingTile",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::IsRailDepotTile,                 "IsRailDepotTile",                 2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::IsRailStationTile,               "IsRailStationTile",               2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::IsRailWaypointTile,              "IsRailWaypointTile",              2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::IsRailTypeAvailable,             "IsRailTypeAvailable",             2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetCurrentRailType,              "GetCurrentRailType",              1, ".");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::SetCurrentRailType,              "SetCurrentRailType",              2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::TrainCanRunOnRail,               "TrainCanRunOnRail",               3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::TrainHasPowerOnRail,             "TrainHasPowerOnRail",             3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetRailType,                     "GetRailType",                     2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::ConvertRailType,                 "ConvertRailType",                 4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetRailDepotFrontTile,           "GetRailDepotFrontTile",           2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetRailStationDirection,         "GetRailStationDirection",         2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildRailDepot,                  "BuildRailDepot",                  3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildRailStation,                "BuildRailStation",                6, ".iiiii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildNewGRFRailStation,          "BuildNewGRFRailStation",          11, ".iiiiiiiiib");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildRailWaypoint,               "BuildRailWaypoint",               2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::RemoveRailWaypointTileRectangle, "RemoveRailWaypointTileRectangle", 4, ".iib");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::RemoveRailStationTileRectangle,  "RemoveRailStationTileRectangle",  4, ".iib");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetRailTracks,                   "GetRailTracks",                   2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildRailTrack,                  "BuildRailTrack",                  3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::RemoveRailTrack,                 "RemoveRailTrack",                 3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::AreTilesConnected,               "AreTilesConnected",               4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildRail,                       "BuildRail",                       4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::RemoveRail,                      "RemoveRail",                      4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetSignalType,                   "GetSignalType",                   3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::BuildSignal,                     "BuildSignal",                     4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::RemoveSignal,                    "RemoveSignal",                    3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetBuildCost,                    "GetBuildCost",                    3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetMaxSpeed,                     "GetMaxSpeed",                     2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptRail::GetMaintenanceCostFactor,        "GetMaintenanceCostFactor",        2, ".i");

	engine->AddClassEnd();
}
