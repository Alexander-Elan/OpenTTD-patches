/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_tilelist.hpp"


static void SQAITileList_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AITileList", "AIList");
	SQConvert::AddConstructor <void (ScriptTileList::*)(), 1> (engine, "x");

	SQConvert::DefSQMethod (engine, "AITileList", &ScriptTileList::AddRectangle,    "AddRectangle",    3, "xii");
	SQConvert::DefSQMethod (engine, "AITileList", &ScriptTileList::AddTile,         "AddTile",         2, "xi");
	SQConvert::DefSQMethod (engine, "AITileList", &ScriptTileList::RemoveRectangle, "RemoveRectangle", 3, "xii");
	SQConvert::DefSQMethod (engine, "AITileList", &ScriptTileList::RemoveTile,      "RemoveTile",      2, "xi");

	engine->AddClassEnd();
}


static void SQAITileList_IndustryAccepting_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AITileList_IndustryAccepting", "AITileList");
	SQConvert::AddConstructor <void (ScriptTileList_IndustryAccepting::*)(IndustryID industry_id, int radius), 3> (engine, "xii");

	engine->AddClassEnd();
}


static void SQAITileList_IndustryProducing_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AITileList_IndustryProducing", "AITileList");
	SQConvert::AddConstructor <void (ScriptTileList_IndustryProducing::*)(IndustryID industry_id, int radius), 3> (engine, "xii");

	engine->AddClassEnd();
}


static void SQAITileList_StationType_Register (Squirrel *engine)
{
	engine->AddClassBegin ("AITileList_StationType", "AITileList");
	SQConvert::AddConstructor <void (ScriptTileList_StationType::*)(StationID station_id, ScriptStation::StationType station_type), 3> (engine, "xii");

	engine->AddClassEnd();
}
