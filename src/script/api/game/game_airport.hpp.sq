/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_airport.hpp"


static void SQGSAirport_Register (Squirrel *engine)
{
	engine->AddClassBegin ("GSAirport");
	SQConvert::AddConstructor <void (ScriptAirport::*)(), 1> (engine, "x");

	engine->AddConst ("AT_SMALL",         ScriptAirport::AT_SMALL);
	engine->AddConst ("AT_LARGE",         ScriptAirport::AT_LARGE);
	engine->AddConst ("AT_METROPOLITAN",  ScriptAirport::AT_METROPOLITAN);
	engine->AddConst ("AT_INTERNATIONAL", ScriptAirport::AT_INTERNATIONAL);
	engine->AddConst ("AT_COMMUTER",      ScriptAirport::AT_COMMUTER);
	engine->AddConst ("AT_INTERCON",      ScriptAirport::AT_INTERCON);
	engine->AddConst ("AT_HELIPORT",      ScriptAirport::AT_HELIPORT);
	engine->AddConst ("AT_HELISTATION",   ScriptAirport::AT_HELISTATION);
	engine->AddConst ("AT_HELIDEPOT",     ScriptAirport::AT_HELIDEPOT);
	engine->AddConst ("AT_INVALID",       ScriptAirport::AT_INVALID);
	engine->AddConst ("PT_HELICOPTER",    ScriptAirport::PT_HELICOPTER);
	engine->AddConst ("PT_SMALL_PLANE",   ScriptAirport::PT_SMALL_PLANE);
	engine->AddConst ("PT_BIG_PLANE",     ScriptAirport::PT_BIG_PLANE);
	engine->AddConst ("PT_INVALID",       ScriptAirport::PT_INVALID);

	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::IsValidAirportType,            "IsValidAirportType",            2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::IsAirportInformationAvailable, "IsAirportInformationAvailable", 2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetPrice,                      "GetPrice",                      2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::IsHangarTile,                  "IsHangarTile",                  2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::IsAirportTile,                 "IsAirportTile",                 2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetAirportWidth,               "GetAirportWidth",               2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetAirportHeight,              "GetAirportHeight",              2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetAirportCoverageRadius,      "GetAirportCoverageRadius",      2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetNumHangars,                 "GetNumHangars",                 2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetHangarOfAirport,            "GetHangarOfAirport",            2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::BuildAirport,                  "BuildAirport",                  4, ".iii");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::RemoveAirport,                 "RemoveAirport",                 2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetAirportType,                "GetAirportType",                2, ".i");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetNoiseLevelIncrease,         "GetNoiseLevelIncrease",         3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetNearestTown,                "GetNearestTown",                3, ".ii");
	SQConvert::DefSQStaticMethod (engine, &ScriptAirport::GetMaintenanceCostFactor,      "GetMaintenanceCostFactor",      2, ".i");

	engine->AddClassEnd();
}
