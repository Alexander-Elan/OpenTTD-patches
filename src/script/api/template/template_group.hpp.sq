/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_group.hpp"

namespace SQConvert {
	/* Allow enums to be used as Squirrel parameters */
	template <> inline ScriptGroup::GroupID GetParam<ScriptGroup::GroupID> (HSQUIRRELVM vm, int index) { return (ScriptGroup::GroupID) GetInteger (vm, index); }
	template <> inline int Return<ScriptGroup::GroupID>(HSQUIRRELVM vm, ScriptGroup::GroupID res) { sq_pushinteger(vm, (int32)res); return 1; }

	/* Allow ScriptGroup to be used as Squirrel parameter */
	template <> inline       ScriptGroup *GetParam<ScriptGroup*> (HSQUIRRELVM vm, int index) { return  GetUserPointer<ScriptGroup> (vm, index); }
	template <> inline       ScriptGroup &GetParam<ScriptGroup&> (HSQUIRRELVM vm, int index) { return *GetUserPointer<ScriptGroup> (vm, index); }
	template <> inline const ScriptGroup *GetParam<const ScriptGroup*> (HSQUIRRELVM vm, int index) { return  GetUserPointer<ScriptGroup> (vm, index); }
	template <> inline const ScriptGroup &GetParam<const ScriptGroup&> (HSQUIRRELVM vm, int index) { return *GetUserPointer<ScriptGroup> (vm, index); }
	template <> inline int Return<ScriptGroup *>(HSQUIRRELVM vm, ScriptGroup *res) { if (res == NULL) { sq_pushnull(vm); return 1; } res->AddRef(); Squirrel::CreateClassInstanceVM(vm, "Group", res, NULL, DefSQDestructorCallback<ScriptGroup>, true); return 1; }
} // namespace SQConvert
