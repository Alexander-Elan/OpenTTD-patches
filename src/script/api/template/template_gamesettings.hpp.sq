/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_gamesettings.hpp"

namespace SQConvert {
	/* Allow ScriptGameSettings to be used as Squirrel parameter */
	template <> inline       ScriptGameSettings *GetParam<ScriptGameSettings*> (HSQUIRRELVM vm, int index) { return  GetUserPointer<ScriptGameSettings> (vm, index); }
	template <> inline       ScriptGameSettings &GetParam<ScriptGameSettings&> (HSQUIRRELVM vm, int index) { return *GetUserPointer<ScriptGameSettings> (vm, index); }
	template <> inline const ScriptGameSettings *GetParam<const ScriptGameSettings*> (HSQUIRRELVM vm, int index) { return  GetUserPointer<ScriptGameSettings> (vm, index); }
	template <> inline const ScriptGameSettings &GetParam<const ScriptGameSettings&> (HSQUIRRELVM vm, int index) { return *GetUserPointer<ScriptGameSettings> (vm, index); }
	template <> inline int Return<ScriptGameSettings *>(HSQUIRRELVM vm, ScriptGameSettings *res) { if (res == NULL) { sq_pushnull(vm); return 1; } res->AddRef(); Squirrel::CreateClassInstanceVM(vm, "GameSettings", res, NULL, DefSQDestructorCallback<ScriptGameSettings>, true); return 1; }
} // namespace SQConvert
