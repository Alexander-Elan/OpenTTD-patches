/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_text.hpp"

namespace SQConvert {
	/* Allow ScriptText to be used as Squirrel parameter */
	template <> inline Param<ScriptText*>::Param (HSQUIRRELVM vm, int index) : data ( GetUserPointer<ScriptText> (vm, index)) { }
	template <> inline Param<ScriptText&>::Param (HSQUIRRELVM vm, int index) : data (*GetUserPointer<ScriptText> (vm, index)) { }
	template <> inline Param<const ScriptText*>::Param (HSQUIRRELVM vm, int index) : data ( GetUserPointer<ScriptText> (vm, index)) { }
	template <> inline Param<const ScriptText&>::Param (HSQUIRRELVM vm, int index) : data (*GetUserPointer<ScriptText> (vm, index)) { }

 template <> inline Param<Text*>::Param (HSQUIRRELVM vm, int index) {
         if (sq_gettype(vm, index) == OT_INSTANCE) {
                 data = GetUserPointer<ScriptText> (vm, index);
         } else if (sq_gettype(vm, index) == OT_STRING) {
                 Param<const char*> param (vm, index);
                 data = new RawText (param);
         } else {
                 data = NULL;
         }
 }
} // namespace SQConvert
