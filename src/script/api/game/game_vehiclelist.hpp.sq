/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_vehiclelist.hpp"


template <> const char *GetClassName<ScriptVehicleList, ST_GS>() { return "GSVehicleList"; }

static void SQGSVehicleList_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptVehicleList, void (ScriptVehicleList::*)(), 1> (engine, "x");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_Station, ST_GS>() { return "GSVehicleList_Station"; }

static void SQGSVehicleList_Station_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_Station, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptVehicleList_Station, void (ScriptVehicleList_Station::*)(StationID station_id), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_Depot, ST_GS>() { return "GSVehicleList_Depot"; }

static void SQGSVehicleList_Depot_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_Depot, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptVehicleList_Depot, void (ScriptVehicleList_Depot::*)(TileIndex tile), 2> (engine, "xi");

	engine->AddClassEnd();
}


template <> const char *GetClassName<ScriptVehicleList_SharedOrders, ST_GS>() { return "GSVehicleList_SharedOrders"; }

static void SQGSVehicleList_SharedOrders_Register (Squirrel *engine)
{
	engine->AddClassBegin (GetClassName <ScriptVehicleList_SharedOrders, ST_GS> (), "GSList");
	SQConvert::AddConstructor <ScriptVehicleList_SharedOrders, void (ScriptVehicleList_SharedOrders::*)(VehicleID vehicle_id), 2> (engine, "xi");

	engine->AddClassEnd();
}
