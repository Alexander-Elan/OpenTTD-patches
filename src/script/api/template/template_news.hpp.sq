/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_news.hpp"

namespace SQConvert {
	/* Allow enums to be used as Squirrel parameters */
	template <> inline Param<ScriptNews::NewsType>::Param (HSQUIRRELVM vm, int index) : data ((ScriptNews::NewsType) GetInteger (vm, index)) { }
	template <> inline int Return<ScriptNews::NewsType>(HSQUIRRELVM vm, ScriptNews::NewsType res) { sq_pushinteger(vm, (int32)res); return 1; }
	template <> inline Param<ScriptNews::NewsReferenceType>::Param (HSQUIRRELVM vm, int index) : data ((ScriptNews::NewsReferenceType) GetInteger (vm, index)) { }
	template <> inline int Return<ScriptNews::NewsReferenceType>(HSQUIRRELVM vm, ScriptNews::NewsReferenceType res) { sq_pushinteger(vm, (int32)res); return 1; }

	/* Allow ScriptNews to be used as Squirrel parameter */
	template <> inline Param<ScriptNews*>::Param (HSQUIRRELVM vm, int index) : data ( GetUserPointer<ScriptNews> (vm, index)) { }
	template <> inline Param<ScriptNews&>::Param (HSQUIRRELVM vm, int index) : data (*GetUserPointer<ScriptNews> (vm, index)) { }
	template <> inline Param<const ScriptNews*>::Param (HSQUIRRELVM vm, int index) : data ( GetUserPointer<ScriptNews> (vm, index)) { }
	template <> inline Param<const ScriptNews&>::Param (HSQUIRRELVM vm, int index) : data (*GetUserPointer<ScriptNews> (vm, index)) { }
	template <> inline int Return<ScriptNews *>(HSQUIRRELVM vm, ScriptNews *res) { if (res == NULL) { sq_pushnull(vm); return 1; } res->AddRef(); Squirrel::CreateClassInstanceVM(vm, "News", res, NULL, DefSQDestructorCallback<ScriptNews>, true); return 1; }
} // namespace SQConvert
